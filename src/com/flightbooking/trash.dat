 private void printSeatMapold(PassengerClass pClass, Seat[][] seats, int startRow) {
        switch (pClass) {
            //      case FIRST ->
            case BUSINESS -> System.out.println("\tA\tC\tD\tE\tF\tH");
            case TRAVELLER -> System.out.println("\tA\tB\tC\tD\tE\tF\tG\tH");
            default -> throw new IllegalArgumentException("Invalid class type: " + pClass);
        }

        for (int i = 0; i < seats.length; i++) {
            System.out.println(startRow + i + "\t");
            for (int j = 0; j < seats[i].length; j++) {
                if (seats[i][j].isBooked()) {
                    System.out.println("  X\t");
                } else {
                    System.out.println(seats[i][j].getType() + "\t");
                }
            }
            System.out.println();
        }
    }

    package com.flightbooking.trash.display;

    import com.flightbooking.model.plane.Flight;
    import com.flightbooking.model.plane.PassengerClass;
    import com.flightbooking.model.plane.Seat;

    import java.u1til.Scanner;

    public class Display {
        private Flight flight;
        private Scanner keyboard;

        public Display(Flight flight) {
            this.flight = flight;
            this.keyboard = new Scanner(System.in);
        }




    }
   /*  public seatLetters =



    ;

    {
        'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'
    }*/
    //
    // protected int numRows = 10; // Default value
    //protected int startRow;

    /*public Cabin(int startRow) {
        this.startRow = startRow;
    }*/